[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

apply plugin: 'jacoco'

configurations {
  mockitoAgent
}
dependencies {
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"

  api "dev.dominion.ecs:dominion-ecs-engine:$dominionEcsVersion"

  api "com.squidpony:squidcore:$squidSquadVersion"
  api "com.squidpony:squidsmooth:$squidSquadVersion"

  testImplementation platform("org.junit:junit-bom:$junitBomVersion")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher"
  testImplementation "org.mockito:mockito-core:$mockitoVersion"
  testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
  mockitoAgent("org.mockito:mockito-core:$mockitoVersion") {
    transitive = false
  }

  if (enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
}

jacoco {
  toolVersion = jacocoVersion
}

tasks.named('test') {
  finalizedBy(tasks.named('jacocoTestReport'))
}

tasks.named('jacocoTestReport') {
  dependsOn(tasks.named('test'))
  reports {
    xml.required.set(false)
    csv.required.set(false)
    html.required.set(true)
  }
}
